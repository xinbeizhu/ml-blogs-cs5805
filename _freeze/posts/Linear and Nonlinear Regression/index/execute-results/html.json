{
  "hash": "16040a76b2990d426665a24cc6366174",
  "result": {
    "markdown": "---\ntitle: Linear and Nonlinear Regression\nauthor: Xinbei Zhu\ndate: '2023-10-28'\ncategories:\n  - code\n  - analysis\nimage: linearNnonlinear.png\n---\n\nLet's talk about something about linear and nonlinear regression in this blog.\n\n### Linear Regression\n\nLinear regression is a statistical method used to model the relationship between a dependent variable and one or more independent variables by fitting a linear equation to the observed data.\n\n-   The **dependent variables** are what we're trying to predict or understand. It's like the \"outcome\" and is usually on the vertical axis (y-axis) of the graph.\n\n-   The **independent variables** are the factors we think might affect the outcome. They are on the horizontal axis (x-axis).\n\n**Equation**: The equation of a linear regression model is typically in the form of $y = ax + b$, where:\n\n-   $y$ is the dependent variable we're trying to predict.\n\n-   $x$ is the independent variableweu're using for prediction\n\n-   $a$ is the y-intercept (the value of $y$ when $x$ is 0).\n\n-   $b$ is the slope of the line, which represents the change in $y$ for a one-unit change in $x$.\n\n**Use case**: It's widely used in situations where the relationship between variables is approximately linear, like predicting house prices based on size, predicting salaries based on experience, etc.\n\n### Nonlinear Regression\n\nNonlinear regression, on the other hand, is used when the data shows a more complex relationship that cannot be accurately described by a straight line. In nonlinear regression:\n\n-   **Complex Relationship**: The relationship between the independent and dependent variables is modeled as a nonlinear function. This means the graph of the data points does not form a straight line but could take various shapes (like curves).\n-   **Equation**: The equation can take many forms, depending on the nature of the relationship and the data. For example, it could be a polynomial (like $y = ax^2 + bx + c$), exponential or logistic function.\n-   **Use Cases**: Nonlinear regression is used in more complex scenarios where the effect of the independent variables on the dependent variable changes in a non-uniform way. Examples include growth rates of organisms, chemical reaction rates, and market saturation models.\n\n### Summary\n\nIn summary, linear regression is used for simpler, straight-line relationships, while nonlinear regression is applied to model more complex, curved relationships in data. The choice between the two depends on the nature of the data and the underlying relationship we're trying to model.\n\n### Task Demo\n\nFor the linear and nonlinear regression task, I'd like to predict house prices. I use the Boston Housing dataset from Kaggle.\n\nLet me import libraries and load the data.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import mean_squared_error, r2_score\n```\n:::\n\n\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndf = pd.read_csv('datasets/housing.csv')\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=42}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>RM</th>\n      <th>LSTAT</th>\n      <th>PTRATIO</th>\n      <th>MEDV</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6.575</td>\n      <td>4.98</td>\n      <td>15.3</td>\n      <td>504000.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6.421</td>\n      <td>9.14</td>\n      <td>17.8</td>\n      <td>453600.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.185</td>\n      <td>4.03</td>\n      <td>17.8</td>\n      <td>728700.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6.998</td>\n      <td>2.94</td>\n      <td>18.7</td>\n      <td>701400.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7.147</td>\n      <td>5.33</td>\n      <td>18.7</td>\n      <td>760200.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nIn this dataset, MEDV stands for \"Median value of owner-occupied homes in \\$1000's\". Essentially, it represents the median value of houses in various areas of Boston, with the values given in thousands of dollars.\n\nRM stands for \"the average number of rooms per dwelling\".\n\nLSTAT stands for \"percentage of lower status of the population\". In the context of the dataset, a higher LSTAT value is often associated with lower median values of homes (MEDV), as it indicates a higher proportion of lower-income residents in the area.\n\nPTRATIO stands for \"pupil-teacher ratio by town\". It represents the ratio of students to teachers in primary and secondary schools in the neighborhood. A lower PTRATIO might indicate better education resources (i.e., more teachers per student) and is often considered a desirable feature in a residential area.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Plotting the distribution of MEDV (Median value of owner-occupied homes)\nplt.figure(figsize=(8, 6))\nsns.histplot(df['MEDV'], bins=30, kde=True)\nplt.title('Distribution of MEDV')\nplt.xlabel('Median value of owner-occupied homes (in $1000s)')\nplt.ylabel('Frequency')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=659 height=523}\n:::\n:::\n\n\nAccording to the plot, most of the medv distribution is around 0.4\\~0.5, that is, 40,000k to 50,000k.\n\nLet's have a look on how the different variables impact the y value.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Scatter plot of RM (average number of rooms per dwelling) vs MEDV\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x='RM', y='MEDV', data=df)\nplt.title('Relationship between RM and MEDV')\nplt.xlabel('Average Number of Rooms per Dwelling')\nplt.ylabel('Median value of owner-occupied homes (in $1000s)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=663 height=523}\n:::\n:::\n\n\nThis image shows that RM and MEDV seem to be in direct proportion to each other.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# Scatter plot of LSTAT (average number of rooms per dwelling) vs MEDV\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x='LSTAT', y='MEDV', data=df)\nplt.title('Relationship between LSTAT and MEDV')\nplt.xlabel('Percentage of Lower Status of the Population')\nplt.ylabel('Median value of owner-occupied homes (in $1000s)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=663 height=523}\n:::\n:::\n\n\nThis image shows that LSTAT and MEDV seem to be inversely proportional.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# Scatter plot of PTRATIO (average number of rooms per dwelling) vs MEDV\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x='PTRATIO', y='MEDV', data=df)\nplt.title('Relationship between PTRATIO and MEDV')\nplt.xlabel('Pupil-teacher Ratio by Town')\nplt.ylabel('Median value of owner-occupied homes (in $1000s)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-8-output-1.png){width=663 height=523}\n:::\n:::\n\n\nIt doesn't look like there's a linear relationship between PTRATIO and MEDV.\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# Correlation matrix heatmap\nplt.figure(figsize=(12, 10))\nsns.heatmap(df.corr(), annot=True, cmap='coolwarm')\nplt.title('Correlation Matrix')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-1.png){width=879 height=801}\n:::\n:::\n\n\nThe correlation matrix indicates that MEDV has a stronger correlation with RM.\n\n#### Linear Regression\n\nLet's train our linear regression model and select RM and MEDV for linear regression.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nX = df[['RM']]\ny = df['MEDV']\n\n# Split the dataset into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Initialize the Linear Regression model\nlr = LinearRegression()\n\n# Train the model\nlr.fit(X_train, y_train)\n```\n\n::: {.cell-output .cell-output-display execution_count=48}\n```{=html}\n<style>#sk-container-id-7 {color: black;background-color: white;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n# Make predictions\ny_pred = lr.predict(X_test)\n\n# Evaluate the model\nmse = mean_squared_error(y_test, y_pred)\nprint(f\"Mean Squared Error: {mse}\")\n\n# Display coefficients\nprint(\"Coefficients:\", lr.coef_)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMean Squared Error: 13362423686.16902\nCoefficients: [176526.28588093]\n```\n:::\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\n# Predictions for the line\ndf['Predictions'] = lr.predict(X)\n\n# Scatter plot with regression line\nplt.figure(figsize=(10, 6))\nsns.scatterplot(x='RM', y='MEDV', data=df, label='Data')\nsns.lineplot(x='RM', y='Predictions', data=df, color='red', label='Regression Line')\nplt.title('Linear Regression Line on RM vs MEDV')\nplt.xlabel('Average Number of Rooms per Dwelling (RM)')\nplt.ylabel('Median value of owner-occupied homes (MEDV)')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-12-output-1.png){width=812 height=523}\n:::\n:::\n\n\nThe linear model demonstrates a not bad fit.\n\n#### Nonlinear Regression\n\nWe notice that LSTAT and MEDV seem to be inversely proportional. Therefore, let's select LSTAT and MEDV for nonlinear regression analysis.\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\n# Selecting RM and MEDV for regression\nX = df[['LSTAT']]\ny = df['MEDV']\n\n# Transforming X to 1/X\nX_transformed = 1 / X\n\n# Fit the linear regression model on the transformed data\nnlr = LinearRegression()\nnlr.fit(X_transformed, y)\n```\n\n::: {.cell-output .cell-output-display execution_count=51}\n```{=html}\n<style>#sk-container-id-8 {color: black;background-color: white;}#sk-container-id-8 pre{padding: 0;}#sk-container-id-8 div.sk-toggleable {background-color: white;}#sk-container-id-8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-8 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-8 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-8 div.sk-item {position: relative;z-index: 1;}#sk-container-id-8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-8 div.sk-item::before, #sk-container-id-8 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-8 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-8 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-8 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-8 div.sk-label-container {text-align: center;}#sk-container-id-8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-8 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\n# Predictions\nX_range = np.linspace(X.min(), X.max(), 100)\ny_pred = nlr.predict(1 / X_range)\n\n# Scatter plot with regression line\nplt.figure(figsize=(10, 6))\nsns.scatterplot(x='LSTAT', y='MEDV', data=df, label='Data')\nplt.plot(X_range, y_pred, color='red', label='Inverse Regression Line')\nplt.title('Inverse Regression (1/LSTAT vs MEDV)')\nplt.xlabel('Percentage of Lower Status of the Population (LSTAT)')\nplt.ylabel('Median value of owner-occupied homes (MEDV)')\nplt.legend()\nplt.show()\n\n# Model evaluation\ny_pred_train = nlr.predict(X_transformed)\nmse = mean_squared_error(y, y_pred_train)\nr2 = r2_score(y, y_pred_train)\nprint(f\"Mean Squared Error: {mse}\")\nprint(f\"R^2 Score: {r2}\")\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-14-output-1.png){width=812 height=523}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nMean Squared Error: 10081897997.112593\nR^2 Score: 0.6304493154356112\n```\n:::\n:::\n\n\nThe nonlinear model exhibits a rather good fit.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}